<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-20T09:09:51 IST" name="Default suite" finished-at="2022-06-20T09:13:01 IST" duration-ms="189394">
    <groups>
    </groups>
    <test started-at="2022-06-20T09:09:51 IST" name="Default test" finished-at="2022-06-20T09:13:01 IST" duration-ms="189394">
      <class name="test.ZerodhaLoginPageTest">
        <test-method is-config="true" signature="extentReports()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:09:51 IST" name="extentReports" finished-at="2022-06-20T09:09:52 IST" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReports -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:09:52 IST" name="beforemethod" finished-at="2022-06-20T09:10:45 IST" duration-ms="53210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="assertionHardLoginPage()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:10:45 IST" name="assertionHardLoginPage" finished-at="2022-06-20T09:10:50 IST" duration-ms="5237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertionHardLoginPage -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:10:50 IST" name="aftermethod" finished-at="2022-06-20T09:10:52 IST" duration-ms="1984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=assertionHardLoginPage status=SUCCESS method=ZerodhaLoginPageTest.assertionHardLoginPage()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:10:52 IST" name="beforemethod" finished-at="2022-06-20T09:11:15 IST" duration-ms="22230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="forgotPasswordLinktest()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:11:15 IST" name="forgotPasswordLinktest" finished-at="2022-06-20T09:11:15 IST" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgotPasswordLinktest -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:11:15 IST" name="aftermethod" finished-at="2022-06-20T09:11:16 IST" duration-ms="1532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgotPasswordLinktest status=SUCCESS method=ZerodhaLoginPageTest.forgotPasswordLinktest()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:11:16 IST" name="beforemethod" finished-at="2022-06-20T09:11:37 IST" duration-ms="21280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="loginWithValidCredentialsTest()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:11:37 IST" name="loginWithValidCredentialsTest" finished-at="2022-06-20T09:11:38 IST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentialsTest -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:11:38 IST" name="aftermethod" finished-at="2022-06-20T09:11:39 IST" duration-ms="726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentialsTest status=SUCCESS method=ZerodhaLoginPageTest.loginWithValidCredentialsTest()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:11:39 IST" name="beforemethod" finished-at="2022-06-20T09:12:06 IST" duration-ms="26538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="signupLinkTest()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:12:06 IST" name="signupLinkTest" finished-at="2022-06-20T09:12:10 IST" duration-ms="4265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signupLinkTest -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:12:10 IST" name="aftermethod" finished-at="2022-06-20T09:12:13 IST" duration-ms="2832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signupLinkTest status=SUCCESS method=ZerodhaLoginPageTest.signupLinkTest()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:12:13 IST" name="beforemethod" finished-at="2022-06-20T09:12:50 IST" duration-ms="37765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="softAssert()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:12:50 IST" name="softAssert" finished-at="2022-06-20T09:12:51 IST" duration-ms="542" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [User ID should be minimum  characters.] but found [User ID should be minimum 6 characters.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [User ID should be minimum  characters.] but found [User ID should be minimum 6 characters.]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at test.ZerodhaLoginPageTest.softAssert(ZerodhaLoginPageTest.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- softAssert -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:12:59 IST" name="aftermethod" finished-at="2022-06-20T09:12:59 IST" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=softAssert status=FAILURE method=ZerodhaLoginPageTest.softAssert()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="flushResult()[pri:0, instance:test.ZerodhaLoginPageTest@72e5a8e]" started-at="2022-06-20T09:12:59 IST" name="flushResult" finished-at="2022-06-20T09:13:01 IST" duration-ms="1963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushResult -->
      </class> <!-- test.ZerodhaLoginPageTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
